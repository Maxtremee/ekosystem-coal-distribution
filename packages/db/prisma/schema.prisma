generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model DistributionCenter {
  id         String       @id @default(cuid())
  createdAt  DateTime     @default(now())
  email      String       @unique
  name       String
  address    String       @db.Text
  StockIssue StockIssue[]
}

model Application {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  createdBy String //email
  updatedBy String? //email

  applicationId         String   @unique
  issueDate             DateTime
  declaredNutCoal       Decimal?
  declaredEcoPeaCoal    Decimal?
  additionalInformation String?

  invoices Invoice[]
}

model Invoice {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  createdBy String //email
  updatedBy String? //email

  invoiceId             String   @unique
  issueDate             DateTime
  paidForCoal           Decimal
  additionalInformation String?

  stockIssues StockIssue[]

  Application   Application? @relation(fields: [applicationId], references: [id])
  applicationId String?
}

model StockIssue {
  id                    String   @id @default(cuid())
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt
  createdBy             String //email
  updatedBy             String? //email
  nutCoalIssued         Decimal?
  ecoPeaCoalIssued      Decimal?
  additionalInformation String?

  Invoice              Invoice?            @relation(fields: [invoiceId], references: [id])
  invoiceId            String?
  DistributionCenter   DistributionCenter? @relation(fields: [distributionCenterId], references: [id])
  distributionCenterId String?
}
